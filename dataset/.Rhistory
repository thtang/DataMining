df = read.xls("iChef data for BAFT 2016 class.xlsx", sheet = 1, header = TRUE)
require(gdata)
df = read.xls("iChef data for BAFT 2016 class.xlsx", sheet = 1, header = TRUE)
tranc_data <-read.csv("C:/Users/tsunh/Desktop/Schoolwork/DataMining/dataset/iChef data for BAFT 2016 class.csv")
table(tranc_data$restaurant_uuid) # 6d0ebab3-edf8-4e04-a947-1973e76ab11f 這間餐廳最多筆資料
restaur_6d <- subset(tranc_data,restaurant_uuid=="6d0ebab3-edf8-4e04-a947-1973e76ab11f")
restaur_6d$timestamp[1:10]
tranc_data <-read.csv("C:/Users/tsunh/Desktop/Schoolwork/DataMining/dataset/iChef data for BAFT 2016 class.csv",
stringsAsFactors = F)
table(tranc_data$restaurant_uuid) # 6d0ebab3-edf8-4e04-a947-1973e76ab11f 這間餐廳最多筆資料
restaur_6d <- subset(tranc_data,restaurant_uuid=="6d0ebab3-edf8-4e04-a947-1973e76ab11f")
restaur_6d$timestamp[1:10]
tranc_data <-read.csv("C:/Users/tsunh/Desktop/Schoolwork/DataMining/dataset/iChef data for BAFT 2016 class.csv",
stringsAsFactors = F)
table(tranc_data$restaurant_uuid) # 6d0ebab3-edf8-4e04-a947-1973e76ab11f 這間餐廳最多筆資料
restaur_6d <- subset(tranc_data,restaurant_uuid=="6d0ebab3-edf8-4e04-a947-1973e76ab11f")
restaur_6d$timestamp[1:10]
tranc_data <- read.xlsx2("iChef data for BAFT 2016 class.xlsx")
library(xlsx)
tranc_data <- read.xlsx2("iChef data for BAFT 2016 class.xlsx")
tranc_data <- read.xlsx2("iChef data for BAFT 2016 class.xlsx",1)
library("xlsx", lib.loc="~/R/win-library/3.3")
install.packages(c("ade4", "arules", "assertthat", "bit64", "broom", "caret", "chron", "cluster", "DBI", "devtools", "fitdistrplus", "forecast", "formatR", "gdtools", "ggraph", "gmp", "highlight", "Hmisc", "htmltools", "hunspell", "lme4", "lmtest", "maptools", "markdown", "Matrix", "memoise", "mvtnorm", "NLP", "pbapply", "pbkrtest", "psych", "quanteda", "quantreg", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "rgl", "rmarkdown", "rsconnect", "Rtsne", "scatterplot3d", "shiny", "sourcetools", "SparseM", "stringi", "stringr", "survival", "swirl", "tibble", "tidyr", "tm", "topicmodels", "tseries", "units", "viridis", "XML", "zoo"))
tranc_data <-read.csv("C:/Users/tsunh/Desktop/Schoolwork/DataMining/dataset/iChef data for BAFT 2016 class.csv",
stringsAsFactors = F)
table(tranc_data$restaurant_uuid) # 6d0ebab3-edf8-4e04-a947-1973e76ab11f 這間餐廳最多筆資料
View(restaur_6d)
View(tranc_data)
library(dplyr)
tranc_data <-read.csv("C:/Users/tsunh/Desktop/Schoolwork/DataMining/dataset/iChef data for BAFT 2016 class.csv",
stringsAsFactors = F) %>% select(-c(X,X.1,X.2,X.3))
table(tranc_data$restaurant_uuid) # 6d0ebab3-edf8-4e04-a947-1973e76ab11f 這間餐廳最多筆資料
restaur_6d <- subset(tranc_data,restaurant_uuid=="6d0ebab3-edf8-4e04-a947-1973e76ab11f")
unix_t <- tranc_data$unix[1]
as.POSIXct(unix_t, origin="1970-01-01")
?as.POSIXct
as.POSIXct(unix_t, origin="1970-01-01",tz = "GMT")
as.POSIXct(unix_t, origin="1970-01-01",tz = "GMT") %>% class()
unix_t <- restaur_6d$unix[1]
as.POSIXct(unix_t, origin="1970-01-01",tz = "GMT")
trans_time <- function(unix_t){
return(as.POSIXct(unix_t, origin="1970-01-01",tz = "GMT"))
}
restaur_6d$timestamp <- sapply(restaur_6d$unix,trans_time)
test <- sapply(restaur_6d$unix,trans_time)
as.POSIXct(restaur_6d$unix[1], origin="1970-01-01",tz = "GMT")
trans_time <- function(unix_t){
return(as.character(as.POSIXct(unix_t, origin="1970-01-01",tz = "GMT")))
}
restaur_6d$timestamp <- sapply(restaur_6d$unix,trans_time)
restaur_6d$timestamp[1]
restaur_6d$timestamp[2]
restaur_6d$timestamp[3]
MyDatesTable <- table(cut(restaur_6d$timestamp, breaks="hour"))
MyDatesTable <- table(cut(restaur_6d$unix, breaks="hour"))
as.Date(""2016-06-15 09:27:30"")
as.Date("2016-06-15 09:27:30")
MyDatesTable <- table(cut(as.POSIXlt(restaur_6d$timestamp), breaks="hour"))
MyDatesTable
MyDatesTable <- table(cut(as.POSIXlt(restaur_6d$timestamp,tz = "GMT"), breaks="hour"))
MyDatesTable
MyDatesTable <- table(cut(as.POSIXlt(restaur_6d$timestamp,tz = "CTS"), breaks="hour"))
MyDatesTable[1:10]
View(MyDatesTable)
trans_time <- function(unix_t){
return(as.character(as.POSIXct(unix_t, origin="1970-01-01",tz = "CTS")))
}
restaur_6d$timestamp <- sapply(restaur_6d$unix,trans_time)
MyDatesTable <- table(cut(as.POSIXlt(restaur_6d$timestamp,tz = "CTS"), breaks="hour"))
MyDatesTable[1:10]
MyDatesTable <- table(cut(as.POSIXlt(restaur_6d$timestamp,tz = "GMT"), breaks="hour"))
MyDatesTable[1:10]
MyDatesTable <- table(cut(as.POSIXlt(restaur_6d$timestamp,tz = "GMT+8"), breaks="hour"))
Sys.timezone()
MyDatesTable <- table(cut(as.POSIXlt(restaur_6d$timestamp,tz = "Asia/Taipei"), breaks="hour"))
MyDatesTable[1:10]
trans_time <- function(unix_t){
return(as.character(as.POSIXct(unix_t, origin="1970-01-01",tz = "Asia/Taipei")))
}
restaur_6d$timestamp <- sapply(restaur_6d$unix,trans_time)
MyDatesTable <- table(cut(as.POSIXlt(restaur_6d$timestamp,tz = "Asia/Taipei"), breaks="hour"))
MyDatesTable[1:10]
MyDatesTable %>% View()
plot(MyDatesTable)
MyDatesTable$time <- format(MyDatesTable$Var1, "%H:%M")
MyDatesTable$Var1
MyDatesTable <- as.data.frame(table(cut(as.POSIXlt(restaur_6d$timestamp,tz = "Asia/Taipei"), breaks="hour")))
MyDatesTable$time <- format(MyDatesTable$Var1, "%H:%M")
MyDatesTable %>% class9
MyDatesTable %>% class()
MyDatesTable$Var1
MyDatesTable$time <- sapply(MyDatesTable$Var1, function(x){format(x, "%H:%M")})
MyDatesTable <- as.data.frame(table(cut(as.POSIXlt(restaur_6d$timestamp,tz = "Asia/Taipei"), breaks="hour")),
stringsAsFactors = F)
MyDatesTable$time <- sapply(MyDatesTable$Var1, function(x){format(x, "%H:%M")})
?format
?as.POSIXct
MyDatesTable$Var1[1]
hours(MyDatesTable$Var1[1])
hour(MyDatesTable$Var1[1])
hrs(MyDatesTable$Var1[1])
MyDatesTable$time <- sapply(MyDatesTable$Var1, function(x){format(x, format = "%H:%M")})
MyDatesTable$time
MyDatesTable$time <- sapply(MyDatesTable$Var1, function(x){format(x, format = "%H:%M")})
hour()
library(zoo)
library(lubridate)
hour(MyDatesTable$Var1[1])
hour(MyDatesTable$Var1[2])
MyDatesTable$Var1[2]
MyDatesTable$time <- sapply(MyDatesTable$Var1, hour)
View(MyDatesTable)
plot(MyDatesTable$time)
hist(MyDatesTable$time)
library(ggplot2)
ggplot(data=MyDatesTable, aes(time)) + geom_histogram()
ggplot(data=MyDatesTable, aes(time)) + geom_histogram(bins = 24)
ggplot(data=MyDatesTable, aes(time)) + geom_histogram(bins = 1)
ggplot(data=MyDatesTable, aes(time)) + geom_histogram(bins = 50)
MyDatesTable$time
MyDatesTable$time <- sapply(MyDatesTable$Var1, hour)
freq_non_zero <- subset(MyDatesTable,MyDatesTable$Freq != 0)
View(freq_non_zero)
ggplot(data=freq_non_zero , aes(time)) + geom_histogram(bins = 24)
range(12)
ggplot(data=freq_non_zero , aes(time,1:24)) + geom_histogram(bins = 24)
1:12
ggplot(data=freq_non_zero , aes(time)) + geom_histogram(bins = 24)
ggplot(data=freq_non_zero , aes(time,Freq)) + geom_histogram(bins = 24)
ggplot(data=freq_non_zero , aes(time,Freq)) + geom_histogram(stat="identity")
ggplot(data=freq_non_zero , aes(time,Freq)) + geom_histogram(stat="identity",,binwidth = 1)
ggplot(data=freq_non_zero , aes(time,Freq)) + geom_histogram(stat="identity")
ggplot(data=freq_non_zero , aes(time,mean(Freq)) + geom_histogram(stat="identity")
ggplot(data=freq_non_zero , aes(time,mean(Freq))) + geom_histogram(stat="identity")
ggplot(data=freq_non_zero , aes(time,Freq)) + geom_histogram(stat="identity")
ggplot(data=freq_non_zero , aes(time,Freq)) + geom_histogram(stat="identity")+
geom_line()
ggplot(data=freq_non_zero , aes(time,Freq)) +
geom_line()
ggplot(data=freq_non_zero , aes(time,Freq)) +
geom_line()+geom_point()
ggplot(data=freq_non_zero , aes(time,Freq)) +
geom_boxplot()
ggplot(data=freq_non_zero , aes(time,Freq)) +
geom_boxplot(stat="identity")
ggplot(data=freq_non_zero , aes(time,Freq)) +
geom_boxplot(stat="Identity")
ggplot(data=freq_non_zero , aes(as.factor(time),Freq)) +
geom_boxplot()
ggplot(data=freq_non_zero , aes(as.factor(time),Freq),fill="lightblue") +
geom_boxplot()
ggplot(data=freq_non_zero , aes(as.factor(time),Freq),col="lightblue") +
geom_boxplot()
ggplot(data=freq_non_zero , aes(as.factor(time),Freq,fill = as.factor(time))) +
geom_boxplot()
ggplot(data=freq_non_zero , aes(as.factor(time),Freq,fill = as.factor(time))) +
geom_boxplot()+
guides(fill=FALSE)
ggplot(data=MyDatesTable , aes(as.factor(time),Freq,fill = as.factor(time))) +
geom_boxplot()+
guides(fill=FALSE)
freq_non_zero
freq_non_zero
ggplot(data=freq_non_zero , aes(as.factor(time),Freq,fill = as.factor(time))) +
geom_boxplot()+
guides(fill=FALSE)
unique(tranc_data$restaurant_uuid)
restaur_id <- unique(tranc_data$restaurant_uuid)
shinyUI(fluidPage(
titlePanel("大家好")
))
library(shiny)
shinyUI(fluidPage(
titlePanel("大家好")
))
runApp()
runApp()
runApp()
runApp()
hr()
runApp()
runApp()
runApp()
runApp()
freq_non_zero
freq_non_zero <- subset(MyDatesTable,MyDatesTable$Freq != 0 & MyDatesTable$time <= as.POSIXct("2017-05-10"))
dim(freq_non_zero)
freq_non_zero <- subset(MyDatesTable,MyDatesTable$Freq != 0 & MyDatesTable$time > as.POSIXct("2017-05-10"))
dim(freq_non_zero)
runApp()
runApp()
runApp()
runApp()
runApp()
?saveRDS
saveRDS(MyDatesTable,"DatesTable")
MyDatesTable <- readRDS("DatesTable")
runApp()
runApp()
MyDatesTable$Var1[1]
readRDS("DatesTable")
saveRDS(MyDatesTable,"DatesTable.rds")
MyDatesTable <- readRDS("DatesTable.rds")
MyDatesTable$Var1
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
restaur_id
restaur_id[1]
restaur_6d <- subset(tranc_data,restaurant_uuid==restaur_id[2])
restaur_6d$timestamp[1:10]
unix_t <- restaur_6d$unix[1]
as.POSIXct(unix_t, origin="1970-01-01",tz = "GMT")
trans_time <- function(unix_t){
return(as.character(as.POSIXct(unix_t, origin="1970-01-01",tz = "Asia/Taipei")))
}
restaur_6d$timestamp <- sapply(restaur_6d$unix,trans_time)
MyDatesTable <- as.data.frame(table(cut(as.POSIXlt(restaur_6d$timestamp,tz = "Asia/Taipei"), breaks="hour")),
stringsAsFactors = F)
MyDatesTable$time <- sapply(MyDatesTable$Var1, hour)
library(ggplot2)
freq_non_zero <- subset(MyDatesTable,MyDatesTable$Freq != 0 & MyDatesTable$time <= as.POSIXct("2017-05-10"))
ggplot(data=freq_non_zero , aes(as.factor(time),Freq,fill = as.factor(time))) +
geom_boxplot()+
guides(fill=FALSE)
View(tranc_data)
restaur_6d$timestamp <- sapply(tranc_data$unix,trans_time)
tranc_data$timestamp <- sapply(tranc_data$unix,trans_time)
MyDatesTable <- as.data.frame(table(cut(as.POSIXlt(tranc_data$timestamp,tz = "Asia/Taipei"), breaks="hour")),
stringsAsFactors = F)
MyDatesTable$time <- sapply(MyDatesTable$Var1, hour)
library(ggplot2)
saveRDS(MyDatesTable,"DatesTable.rds")
View(MyDatesTable)
View(MyDatesTable)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(restaur_6d)
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='thtang',
token='F6EE94BFFE3CF3A2FDB0C01277D7313A',
secret='<SECRET>')
rsconnect::setAccountInfo(name='thtang', token='F6EE94BFFE3CF3A2FDB0C01277D7313A', secret='7VDuFTc1v22yinKKiHblDRHi49k+5P3TmSYV/zyi')
deployApp()
library(rsconnect)
deployApp()
test <- gtrends("陳雪")$interest_over_time
runApp()
deployApp()
runApp('shiny_app')
deployApp()
